# 20230402
# 프로그래머스
# 기출문제 1번 (250137)

#
# def solution(bandage, health, attacks):
#     cnt = 0  # 연속 성공 횟수
#     time = 0
#     hp = health
#
#     while attacks:
#         time += 1
#         if time == attacks[0][0]:  # 공격 받는 시간
#             t, damage = attacks.pop(0)
#             hp -= damage
#             cnt = 0  # 횟수 초기화
#             if hp <= 0:
#                 return -1
#         else:
#             hp += bandage[1]
#             cnt += 1
#
#             if cnt == bandage[0]:  # 연속 성공 횟수가 다 차면
#                 hp += bandage[2]  # 추가 회복
#                 cnt = 0  # 연속 성공 횟수 초기화
#
#             if hp > health:
#                 hp = health
#
#     return hp
# print(solution([5, 1, 5],30,[[2, 10], [9, 15], [10, 5], [11, 5]]))



# def solution(topping):
#     A_plus = 0
#     A_minus = 0
#     store = []
#     answer = 0
#
#     a=0
#     while a!=len(topping):
#         a+=1
#         for i in range(a):
#             if topping[i] not in store:
#                 store.append(topping[i])
#             else:
#                 pass
#
#         A_minus = len(store)
#         store = [] #store 초기화
#
#         for j in range(len(topping)-a):
#             if topping[a+j] not in store:
#                 store.append(topping[a+j])
#             else:
#                 pass
#         A_plus = len(store)
#         store = []
#         if A_plus == A_minus:
#             answer += 1
#
#
#
#     return answer
# print(solution([1, 2, 1, 3, 1, 4, 1, 2]))


# def solution(topping):
#     bro1 = {}
#     bro2 = {}
#     cnt = 0
#     for t in topping:
#         if t in bro1:
#             bro1[t] = 1
#     for t in topping:
#         if t in bro2:
#             bro2[t] += 1
#         else:
#             bro2[t] += 1
#         bro1[t]-= 1
#         if bro1[t] == 0:
#             del bro1[t]
#         if len(bro1) == len(bro2):
#             cnt += 1
#
#     return cnt

# print(solution([1, 2, 1, 3, 1, 4, 1, 2]))


# import sys
# input = sys.stdin.readline
#
# r = int(input())
# arr = [0]*10001
#
# for _ in range(n):
#     x = int(input())
#     arr[x] += 1
#
# for i in range(1,len(arr)):
#     if arr[i] != 0:
#         for j in range(arr[i]):
#             print(i)



#백준 (터렛)
#원의 중심이 (a, b)이고 반지름이 r인 원의 방정식은 (x - a)2 + (y - b)2 = r2이에요.
#sqrt_a = math.sqrt(a) float
n = int(input())
for _ in range(n):
    import math

    for _ in range(n):
        x1, y1, r1, x2, y2, r2 = map(int, input().split())
        distance = math.sqrt((x1 - x2) ** 2 + (y1 - y2) ** 2)  # 두 원의 거리 (원의방정식활용)
        if distance == 0 and r1 == r2:  # 두 원이 동심원이고 반지름이 같을 때
            print(-1)
        elif abs(r1 - r2) == distance or r1 + r2 == distance:  # 내접, 외접일 때
            print(1)
        elif abs(r1 - r2) < distance < (r1 + r2):  # 두 원이 서로다른 두 점에서 만날 때
            print(2)
        else:
            print(0)  # 그 외에
