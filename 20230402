#귤 고르기 138476
# def solution(k, tangerine):
#     Dict={}
#     tmp=1#귤의 개수
#     # result=
#     tangerine.sort()
#     print(tangerine)
#     for i in range(len(tangerine)-1):
#         if tangerine[i] == tangerine[i+1]:
#         else:
# #             Dict[i]=tmp
# #             tmp=1
#     Dict[tangerine[-1]] = tmp
#     print(Dict)
#     print(max(Dict.values()))
#     # for j in range(len(Dict)):
#     #     if Dict[j]==max(Dict) and Dict[j]<= k:
#     #         k-=Dict[j]
#     #         result+=1
#     #         del Dict[j]
#     # return result




# print(solution(6,[1,3,2,5,4,5,2,3]))
# a = [1,3]
# for i in range(len(a)): # 3
#     if a[i] % 2 == 0:
#         del a[i]



# def solution(k, tangerine):
#     dictionary = {}
#     for t in tangerine:
#         if t in dictionary:
#             dictionary[t] += 1
#         else:
#             dictionary[t] = 1
#     values = sorted(dictionary.values())
#     cnt = 0
#     for v in values[::-1]:
#         k-=v
#         cnt += 1
#         if k <= 0:
#             return cnt
#
# solution(6,[1, 3, 2, 5, 4, 5, 2, 3])
#
#
#
#
#
# def solution(k, tangerine):
#     arr=[]
#     answer=[]
#     for t in set(tangerine):
#         arr.append([tangerine.count(t),t])
#     arr.sort(reverse=True)
#     for c,i in arr:
#         k -= c
#         answer += 1
#         if k <= 0:
#             return answer
#
#
# solution(6, [1, 3, 2, 5, 4, 5, 2, 3])



# def solution(cards1, cards2, goal):
#     one=0
#     two=0
#     for i in goal:
#         if one < len(cards1) and i == cards1[one]:
#             one+= 1
#         elif two < len(cards2) and i == cards2[two]:
#             two+=1
#         else:
#             return "No"
#     return "Yes"
#
#
#
#
#
#
# print(solution(["i", "drink","water"],["want", "to"],["i", "want", "to", "drink", "water"]))



#공원 산책
#172928
def solution(park, routes):
    x=0
    y=0
    Dict={"E":1,"W":-1,"S":1,"N":-1}
    for i in range(len(park)):
        for j in range(len(park[i])):
            if "S" in park[i][j]:
                x=i
                y=j
    for l in range(len(routes)):
        if "E" in routes[l]:
            routes[l][:-1]
solution(["SOO",
          "OXX",
          "OOO"],["E 2","S 2","W 1"])
