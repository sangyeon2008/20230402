20# 20230402

# class animal: #self: 객체 따로따로를 봐주기 위함
#     def __init__(self,name,age,link):
#         self.name = name
#         self.link =link #-->요소를 가리킴
#
# class Stack:
#     def __init__(self):
#         self. top = None #처음에는 아무것도 없었기 때문
#
#     def push(self,data):
#         if self.top is None:

    # class StackElement:
    #     # 생성자 생성
    #     def __init__(self,data,link):
    #         #요소의 값
    #         self.data = data
    #         #다음 요소의 위치
    #         self.lint = link
    #
    # class Stack:
    #     def __init__(self):
    #         # self.top: 항상 stack의 최상위 요소를 확인한다.
    #         self.top = None
    #
    #     #가장 최사위 노드의 데이터를 return 하는 함수
    #     def peek(self):
    #         if self.top is None:
    #             return None
    #         else:
    #             return self.top.data
    #
    #     def push(self,data):
    #         if self.top is None:
    #             elem = StackElement(data,None)
    #             self.top = elem
    #
    #         else:
    #             elem = StackElement(data,self.top)
    #             self.top = elem
    #
    #     def pop(self):
    #         if self.top is None:
    #             return None
    #
    #         else:
    #             ret_data = self.top.data
    #             self.top= self.top.link
    #             return ret_data
    #
    #
    #
    #
    # st = Stack()
    # print(st.peek)
    #
    # for i in range(1,6):
    #     st.push(i)
    #     print(st.peek())
    # print()
    #
    # for _ in range(5):
    #     print(st.pop())



# def solution(arr):
#     answer = []
#     answer.append(arr[0])
#     for i in range(1,len(arr)):
#         if arr[i] != answer[-1]:
#             answer.append(arr[i])
#     return(answer)
#
# print(solution([1,1,3,3,0,1,1]))


# k = int(input())
# x=[]
# for _ in range(k):
#     b= int(input())
#     if b:
#         x.append(b)
#     else:
#         if x:
#             x.pop()
# print(x)


# k = int(input())
# arr = []
# for j in range(k):
#     x=input()
#     x.split()
#     for i in range(len(x)):
#         arr.append(f"case{j}{x[::-1]}")
# print(arr)


# N = int(input())
# for x in range(1,N+1):
#     stack = input().split()
#     string =  f"Case #{x}:"
#     while stack:
#         string += stack.pop()
#         if len(stack) > 0:
#             stack += ' '
#     print(string)




# import sys
# input = sys.stdin.readline
# stack = []
# N = int(input())
# for _ in range(N):
#     order = input()
#     if order[0] == '1':
#         stack.append(order.split()[-1])
#     elif order[0] == '2':
#         if stack:
#             print(stack.pop())
#         else:
#             print(-1)
#     elif order[0] == "3":
#         print(len(stack))
#     elif order[0] == "4":
#         print((stack == []) + 0)
#     else:
#         if stack:
#             print(stack[-1])
#         else:
#             print(-1)




#백준 화학식량 2257
#수소(H):1, 탄소(C):12, 산소(O): 16
x=input()
chemical = []
sign = {"H":1, "C": 12, "O":16}
for i in x:
    if i=="(":
        chemical.append(i)
    elif i == 'H' or i=='C' or i=='O':
        chemical.append(sign[i])
    elif i == 0:
        tmp = 0

